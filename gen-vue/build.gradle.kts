import org.ajoberstar.grgit.Grgit

plugins {
    base
    id("org.ajoberstar.grgit")
}

group = "dw"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

val dukatClonePath = layout.buildDirectory.dir("dukat-repo")
val generatedDukatDistribPath = layout.buildDirectory.dir("dukat-repo/node-package/build/distrib")
//val copyDukatDistribPath = layout.projectDirectory.dir("dukat-distrib")
//copyDukatDistribPath.asFile.mkdirs()
val generateVueTempPath = layout.buildDirectory.dir("vue-conversion")
val generateVueTempOutputPath = layout.buildDirectory.dir("vue-conversion/node_modules")
val generatedVueBindingsPath = layout.buildDirectory.dir("generated-source/vue-binds")

val cloneDukat by tasks.registering(Task::class) {
    outputs.dir(dukatClonePath)

    doFirst {
        if(!dukatClonePath.get().dir(".git").asFile.exists()) {
            val grgit: Grgit = Grgit.clone(
                mapOf(
                    "dir" to dukatClonePath.get(),
                    "uri" to "git@github.com:Kotlin/dukat.git"
                )
            )
            grgit.close()
        }
    }
}

val generateDukat by tasks.registering(Exec::class) {
    group = "codeGenerate"
    workingDir(dukatClonePath.get())
    environment("JAVA_HOME", "/home/herbert/lib/jvm/zulu8.64.0.15-ca-jdk8.0.342-linux_x64")
    commandLine("./gradlew", ":node-package:buildDistrib")
    outputs.dir(generatedDukatDistribPath)

    dependsOn(cloneDukat)
}

val installNpmPackages by tasks.registering(Exec::class) {
    group = "codeGenerate"
    workingDir(generateVueTempPath)
    commandLine("npm", "install", "vue@3.3.4", generatedDukatDistribPath.get().asFile.absolutePath)
    outputs.dir(generateVueTempOutputPath)

    dependsOn(generateDukat)
}

//val generateVueBindings by tasks.registering(Exec::class) {
//    group = "codeGenerate"
//    workingDir(generateVueTempPath)
//    commandLine("node", "node_modules/.bin/dukat", "-p", "dw", "-d", generatedVueBindingsPath.get().asFile.absolutePath, "node_modules/vue/dist/vue.d.ts")
//    outputs.dir(generatedVueBindingsPath)
//
//    dependsOn(installNpmPackages)
//}

//kotlin {
//    js(IR) {
//        browser {
////            compilations.register("vueBindingsCompile") {
////                defaultSourceSet {
////                    dependencies {
////                        implementation(npm("vue", "3.3.4"))
////                        implementation(npm(copyDukatDistribPath.asFile))
////                    }
////                }
////                sourceSets = kotlin.sourceSets["vueBindGenerated"]
////                val bla : KotlinJsCompilation = this
////                kotlin.sourceSets["vueBindGenerated"]
////            }
//        }
//        nodejs()
//    }
////    sourceSets {
////        val vueBindGenerated by creating {
////            dependencies {
////                implementation(npm("vue", "3.3.4"))
////                implementation(npm(copyDukatDistribPath.asFile)
//////    testImplementation(platform("org.junit:junit-bom:5.9.1"))
//////    testImplementation("org.junit.jupiter:junit-jupiter")
////            }
////            targets.add(kotlin.target("jsVueBindingsCompile"))
////        }
////    }
//}
